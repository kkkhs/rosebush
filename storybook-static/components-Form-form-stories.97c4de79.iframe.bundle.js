"use strict";(self.webpackChunkrosebush_react=self.webpackChunkrosebush_react||[]).push([[377],{"./src/components/Form/form.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ABasicForm:()=>ABasicForm,BRegForm:()=>BRegForm,CFullForm:()=>CFullForm,__namedExportsOrder:()=>__namedExportsOrder,default:()=>form_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist_web=__webpack_require__("./node_modules/async-validator/dist-web/index.js"),mapValues=__webpack_require__("./node_modules/lodash-es/mapValues.js"),forEach=__webpack_require__("./node_modules/lodash-es/forEach.js");function fieldsReducer(state,action){switch(action.type){case"addField":return{...state,[action.name]:{...action.value}};case"updateValue":return{...state,[action.name]:{...state[action.name],value:action.value}};case"updateValidateResult":const{isValid,errors}=action.value;return{...state,[action.name]:{...state[action.name],isValid,errors}};default:return state}}const Form_useStore=function useStore(initialValues){const[form,setForm]=(0,react.useState)({isValid:!0,isSubmitting:!1,errors:{}}),[fields,dispatch]=(0,react.useReducer)(fieldsReducer,{}),getFieldValue=key=>fields[key]&&fields[key].value,transfromRules=rules=>rules.map((rule=>{if("function"==typeof rule){return rule({getFieldValue})}return rule}));return{fields,dispatch,form,validateField:async name=>{const{value,rules}=fields[name],descriptor={[name]:transfromRules(rules)},valueMap={[name]:value},validator=new dist_web.A(descriptor);let isValid=!0,errors=[];try{await validator.validate(valueMap)}catch(e){isValid=!1;const err=e;console.log("e",err.errors),console.log("fields",err.fields),errors=err.errors}finally{console.log("errors",isValid),dispatch({type:"updateValidateResult",name,value:{isValid,errors}})}},validateAllFields:async function(){let isValid=!0,errors={};const valueMap=(0,mapValues.A)(fields,(item=>item.value)),descriptor=(0,mapValues.A)(fields,(item=>transfromRules(item.rules))),validator=new dist_web.A(descriptor);setForm({...form,isSubmitting:!0});try{await validator.validate(valueMap)}catch(e){isValid=!1;errors=e.fields,(0,forEach.A)(fields,((value,name)=>{if(errors[name]){const itemErrors=errors[name];dispatch({type:"updateValidateResult",name,value:{isValid:!1,errors:itemErrors}})}else value.rules.length>0&&!errors[name]&&dispatch({type:"updateValidateResult",name,value:{isValid:!0,errors:[]}})}))}finally{return setForm({...form,isSubmitting:!1,isValid,errors}),{isValid,errors,values:valueMap}}},getFieldValue,getFieldsValue:()=>(0,mapValues.A)(fields,(item=>item.value)),setFieldValue:(name,value)=>{fields[name]&&dispatch({type:"updateValue",name,value})},resetFields:()=>{initialValues&&(0,forEach.A)(initialValues,((value,name)=>{fields[name]&&dispatch({type:"updateValue",name,value})}))}}};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const FormContext=(0,react.createContext)({}),Form=(0,react.forwardRef)(((_ref,ref)=>{let{name="rose_form",children,initialValues,onFinish,onFinishFailed}=_ref;const{form,fields,dispatch,...restProps}=Form_useStore(initialValues),{validateField,validateAllFields}=restProps;(0,react.useImperativeHandle)(ref,(()=>({...restProps})));const passedContext={dispatch,fields,initialValues,validateField};let childrenNode;return childrenNode="function"==typeof children?children(form):children,(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)("form",{name,className:"rose-form",onSubmit:async e=>{e.preventDefault(),e.stopPropagation();const{isValid,errors,values}=await validateAllFields();isValid&&onFinish?onFinish(values):!isValid&&onFinishFailed&&onFinishFailed(values,errors)},children:(0,jsx_runtime.jsx)(FormContext.Provider,{value:passedContext,children:childrenNode})})})})),Form_form=Form;Form.__docgenInfo={description:"",methods:[],displayName:"Form",props:{name:{required:!1,tsType:{name:"string"},description:"表单名称，会作为表单字段 id 前缀使用",defaultValue:{value:"'rose_form'",computed:!1}},initialValues:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},description:"表单默认值，只有初始化以及重置时生效"},children:{required:!1,tsType:{name:"union",raw:"ReactNode | RenderProps",elements:[{name:"ReactNode"},{name:"signature",type:"function",raw:"(form: FormState) => ReactNode",signature:{arguments:[{type:{name:"FormState"},name:"form"}],return:{name:"ReactNode"}}}]},description:""},onFinish:{required:!1,tsType:{name:"signature",type:"function",raw:"(values: Record<string, any>) => void",signature:{arguments:[{type:{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},name:"values"}],return:{name:"void"}}},description:"提交表单且数据验证成功后回调事件"},onFinishFailed:{required:!1,tsType:{name:"signature",type:"function",raw:"(\r\n  values: Record<string, any>,\r\n  errors: Record<string, ValidateError[]>\r\n) => void",signature:{arguments:[{type:{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},name:"values"},{type:{name:"Record",elements:[{name:"string"},{name:"Array",elements:[{name:"ValidateError"}],raw:"ValidateError[]"}],raw:"Record<string, ValidateError[]>"},name:"errors"}],return:{name:"void"}}},description:"提交表单且数据验证失败后回调事件"}}};var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames);const FormItem=_ref=>{let{name,label,children,valuePropName="value",trigger="onChange",getValueFromEvent=e=>e.target.value,rules,validateTrigger="onBlur"}=_ref;const{dispatch,fields,initialValues,validateField}=(0,react.useContext)(FormContext),rowClass=classnames_default()("rose-row",{"rose-row-no-label":!label});(0,react.useEffect)((()=>{const value=initialValues&&initialValues[name]||"";dispatch({type:"addField",name,value:{label,name,value,rules:rules||[],errors:[],isValid:!0}})}),[]);const fieldState=fields[name],value=null==fieldState?void 0:fieldState.value,errors=null==fieldState?void 0:fieldState.errors,isRequired=null==rules?void 0:rules.some((rule=>"function"!=typeof rule&&rule.required)),hasError=errors&&errors.length>0,labelClass=classnames_default()({"rose-form-item-required":isRequired}),itemClass=classnames_default()("rose-form-item-control",{"rose-form-item-has-error":hasError}),onValueValidate=async()=>{await validateField(name)},controlProps={};controlProps[valuePropName]=value,controlProps[trigger]=e=>{const value=getValueFromEvent(e);console.log("new Value",value),dispatch({type:"updateValue",name,value})},rules&&(controlProps[validateTrigger]=onValueValidate);const childrenList=react.Children.toArray(children);0===childrenList.length?console.error("From.Item has no children, please provide at least on children!"):childrenList.length>1?console.warn("Only support one child element in Form.item"):react.isValidElement(childrenList[0])||console.error("Child Element is not a valid React Element");const child=childrenList[0],returnChildNode=react.cloneElement(child,{...child.props,...controlProps});return(0,jsx_runtime.jsxs)("div",{className:rowClass,children:[label&&(0,jsx_runtime.jsx)("div",{className:"rose-form-item-label",children:(0,jsx_runtime.jsx)("label",{title:label,className:labelClass,children:label})}),(0,jsx_runtime.jsxs)("div",{className:"rose-form-item",children:[(0,jsx_runtime.jsx)("div",{className:itemClass,children:returnChildNode}),hasError&&(0,jsx_runtime.jsx)("div",{className:"rose-form-item-explain",children:(0,jsx_runtime.jsx)("span",{children:errors[0].message})})]})]})},formItem=FormItem;FormItem.__docgenInfo={description:"",methods:[],displayName:"FormItem",props:{name:{required:!0,tsType:{name:"string"},description:"字段名"},label:{required:!1,tsType:{name:"string"},description:"label 标签的文本"},children:{required:!1,tsType:{name:"ReactNode"},description:""},valuePropName:{required:!1,tsType:{name:"string"},description:"子节点的值的属性，如 checkbox 的是 'checked'",defaultValue:{value:"'value'",computed:!1}},trigger:{required:!1,tsType:{name:"string"},description:"设置收集字段值变更的时机",defaultValue:{value:"'onChange'",computed:!1}},getValueFromEvent:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: any) => any",signature:{arguments:[{type:{name:"any"},name:"event"}],return:{name:"any"}}},description:"设置如何将 event 的值转换成字段值",defaultValue:{value:"(e) => e.target.value",computed:!1}},rules:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"RuleItem | CustomRuleFunc",elements:[{name:"RuleItem"},{name:"signature",type:"function",raw:"({\r\n  getFieldValue,\r\n}: {\r\n  getFieldValue: (key: string) => string\r\n}) => RuleItem",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\r\n  getFieldValue: (key: string) => string\r\n}",signature:{properties:[{key:"getFieldValue",value:{name:"signature",type:"function",raw:"(key: string) => string",signature:{arguments:[{type:{name:"string"},name:"key"}],return:{name:"string"}},required:!0}}]}},name:""}],return:{name:"RuleItem"}}}]}],raw:"CustomRule[]"},description:"校验规则，设置字段的校验逻辑。请看 async validator 了解更多规则"},validateTrigger:{required:!1,tsType:{name:"string"},description:"设置字段校验的时机",defaultValue:{value:"'onBlur'",computed:!1}}}};var input=__webpack_require__("./src/components/Input/input.tsx"),Button_button=__webpack_require__("./src/components/Button/button.tsx"),Select_select=__webpack_require__("./src/components/Select/select.tsx"),icon=__webpack_require__("./src/components/Icon/icon.tsx");const Option=_ref=>{let{value,label,disabled,children,index}=_ref;const{onSelect,selectedValues,multiple}=(0,react.useContext)(Select_select.CW),isSelected=selectedValues.includes(value),classes=classnames_default()("rose-select-item",{"is-disabled":disabled,"is-selected":isSelected});return(0,jsx_runtime.jsxs)("li",{className:classes,onClick:e=>{((e,value,isSelected)=>{e.preventDefault(),onSelect&&!disabled&&onSelect(value,isSelected)})(e,value,isSelected)},children:[children||label||value,multiple&&isSelected&&(0,jsx_runtime.jsx)(icon.A,{icon:"check"})]},index)};Option.displayName="Option";const Select_option=Option;Option.__docgenInfo={description:"",methods:[],displayName:"Option",props:{index:{required:!1,tsType:{name:"string"},description:""},value:{required:!0,tsType:{name:"string"},description:"默认根据此属性值进行筛选，该值不能相同"},label:{required:!1,tsType:{name:"string"},description:"选项的标签，若不设置则默认与 value 相同"},disabled:{required:!1,tsType:{name:"boolean"},description:"是否禁用该选项"},children:{required:!1,tsType:{name:"ReactNode"},description:""}}};const form_stories={title:"Components/Form",id:"Form",component:Form_form,decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{width:"550px"},children:(0,jsx_runtime.jsx)(Story,{})})],parameters:{layout:"centered",source:{type:"code"}},argTypes:{}},ABasicForm=()=>(0,jsx_runtime.jsxs)(Form_form,{children:[(0,jsx_runtime.jsx)(formItem,{label:"用户名",name:"name",rules:[{type:"string",required:!0,min:3}],children:(0,jsx_runtime.jsx)(input.A,{})}),(0,jsx_runtime.jsx)(formItem,{label:"密码",name:"password",rules:[{type:"string",required:!0,min:3,max:8}],children:(0,jsx_runtime.jsx)(input.A,{type:"password"})}),(0,jsx_runtime.jsx)("div",{className:"rose-form-submit-area",children:(0,jsx_runtime.jsx)(Button_button.A,{type:"submit",btnType:"primary",children:"登陆"})})]});ABasicForm.storyName="基本的登陆表单";const BRegForm=()=>(0,jsx_runtime.jsxs)(Form_form,{initialValues:{agreement:!1},children:[(0,jsx_runtime.jsx)(formItem,{label:"邮件",name:"email",rules:[{type:"email",required:!0}],children:(0,jsx_runtime.jsx)(input.A,{})}),(0,jsx_runtime.jsx)(formItem,{label:"密码",name:"password",rules:[{type:"string",required:!0,min:3,max:8}],children:(0,jsx_runtime.jsx)(input.A,{type:"password"})}),(0,jsx_runtime.jsx)(formItem,{label:"性别",name:"gender",rules:[{type:"string",required:!0}],getValueFromEvent:e=>e,valuePropName:"defaultValue",children:(0,jsx_runtime.jsxs)(Select_select.Ay,{placeholder:"请选择性别",children:[(0,jsx_runtime.jsx)(Select_option,{value:"男"}),(0,jsx_runtime.jsx)(Select_option,{value:"女"})]})}),(0,jsx_runtime.jsxs)("div",{className:"agreement-section",style:{display:"flex",justifyContent:"center"},children:[(0,jsx_runtime.jsx)(formItem,{name:"agreement",rules:[{type:"enum",enum:[!0],message:"请同意协议"}],getValueFromEvent:e=>e.target.checked,valuePropName:"checked",children:(0,jsx_runtime.jsx)("input",{type:"checkbox"})}),(0,jsx_runtime.jsxs)("span",{className:"agree-text",children:["注册即代表你同意",(0,jsx_runtime.jsx)("a",{href:"#",children:"用户协议"})]})]}),(0,jsx_runtime.jsx)("div",{className:"rose-form-submit-area",children:(0,jsx_runtime.jsx)(Button_button.A,{type:"submit",btnType:"primary",children:"登陆"})})]});BRegForm.storyName="注册表单，支持多种 FormItem 组件";const confirmRules=[{type:"string",required:!0,min:3,max:8},_ref=>{let{getFieldValue}=_ref;return{asyncValidator:(rule,value)=>(console.log("the value",getFieldValue("password")),console.log(value),new Promise(((resolve,reject)=>{value!==getFieldValue("password")&&reject("The two passwords that you entered do not match!"),setTimeout((()=>{resolve()}),1e3)})))}}],CFullForm=()=>{const ref=(0,react.useRef)(null),resetAll=()=>{var _ref$current,_ref$current2;console.log("form ref",ref.current),console.log("get value",null===(_ref$current=ref.current)||void 0===_ref$current?void 0:_ref$current.getFieldValue("username")),null===(_ref$current2=ref.current)||void 0===_ref$current2||_ref$current2.resetFields()};return(0,jsx_runtime.jsx)(Form_form,{initialValues:{username:"rose",agreement:!1},ref,children:_ref2=>{let{isValid,isSubmitting}=_ref2;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(formItem,{label:"用户名",name:"username",rules:[{type:"email",required:!0}],children:(0,jsx_runtime.jsx)(input.A,{})}),(0,jsx_runtime.jsx)(formItem,{label:"密码",name:"password",rules:[{type:"string",required:!0,min:3,max:8}],children:(0,jsx_runtime.jsx)(input.A,{type:"password"})}),(0,jsx_runtime.jsx)(formItem,{label:"重复密码",name:"confirmPwd",rules:confirmRules,children:(0,jsx_runtime.jsx)(input.A,{type:"password"})}),(0,jsx_runtime.jsxs)("div",{className:"agreement-section",style:{display:"flex",justifyContent:"center"},children:[(0,jsx_runtime.jsx)(formItem,{name:"agreement",valuePropName:"checked",getValueFromEvent:e=>e.target.checked,rules:[{type:"enum",enum:[!0],message:"请同意协议"}],children:(0,jsx_runtime.jsx)("input",{type:"checkbox"})}),(0,jsx_runtime.jsxs)("span",{className:"agree-text",children:["注册即代表你同意",(0,jsx_runtime.jsx)("a",{href:"#",children:"用户协议"})]})]}),(0,jsx_runtime.jsxs)("div",{className:"rose-form-submit-area",children:[(0,jsx_runtime.jsxs)(Button_button.A,{type:"submit",btnType:"primary",children:["登陆 ",isSubmitting?"验证中":"验证完毕"," ",isValid?"通过😄":"没通过😢"," "]}),(0,jsx_runtime.jsx)(Button_button.A,{type:"button",onClick:resetAll,children:"重置"})]})]})}})};CFullForm.storyName="自定义规则，调用表单实例",ABasicForm.parameters={...ABasicForm.parameters,docs:{...ABasicForm.parameters?.docs,source:{originalSource:'() => {\n  return <Form>\r\n      <Item label="用户名" name="name" rules={[{\n      type: \'string\',\n      required: true,\n      min: 3\n    }]}>\r\n        <Input />\r\n      </Item>\r\n      <Item label="密码" name="password" rules={[{\n      type: \'string\',\n      required: true,\n      min: 3,\n      max: 8\n    }]}>\r\n        <Input type="password" />\r\n      </Item>\r\n      <div className="rose-form-submit-area">\r\n        <Button type="submit" btnType="primary">\r\n          登陆\r\n        </Button>\r\n      </div>\r\n    </Form>;\n}',...ABasicForm.parameters?.docs?.source}}},BRegForm.parameters={...BRegForm.parameters,docs:{...BRegForm.parameters?.docs,source:{originalSource:'() => {\n  const initialValues = {\n    agreement: false\n  };\n  return <Form initialValues={initialValues}>\r\n      <Item label="邮件" name="email" rules={[{\n      type: \'email\',\n      required: true\n    }]}>\r\n        <Input />\r\n      </Item>\r\n      <Item label="密码" name="password" rules={[{\n      type: \'string\',\n      required: true,\n      min: 3,\n      max: 8\n    }]}>\r\n        <Input type="password" />\r\n      </Item>\r\n      <Item label="性别" name="gender" rules={[{\n      type: \'string\',\n      required: true\n    }]} getValueFromEvent={e => e} valuePropName="defaultValue">\r\n        <Select placeholder="请选择性别">\r\n          <Option value="男" />\r\n          <Option value="女" />\r\n        </Select>\r\n      </Item>\r\n      <div className="agreement-section" style={{\n      display: \'flex\',\n      justifyContent: \'center\'\n    }}>\r\n        <Item name="agreement" rules={[{\n        type: \'enum\',\n        enum: [true],\n        message: \'请同意协议\'\n      }]} getValueFromEvent={e => e.target.checked} valuePropName="checked">\r\n          <input type="checkbox" />\r\n        </Item>\r\n        <span className="agree-text">\r\n          注册即代表你同意<a href="#">用户协议</a>\r\n        </span>\r\n      </div>\r\n      <div className="rose-form-submit-area">\r\n        <Button type="submit" btnType="primary">\r\n          登陆\r\n        </Button>\r\n      </div>\r\n    </Form>;\n}',...BRegForm.parameters?.docs?.source}}},CFullForm.parameters={...CFullForm.parameters,docs:{...CFullForm.parameters?.docs,source:{originalSource:'() => {\n  const ref = useRef<IFormRef>(null);\n  const resetAll = () => {\n    console.log(\'form ref\', ref.current);\n    console.log(\'get value\', ref.current?.getFieldValue(\'username\'));\n    ref.current?.resetFields();\n  };\n  return <Form initialValues={{\n    username: \'rose\',\n    agreement: false\n  }} ref={ref}>\r\n      {({\n      isValid,\n      isSubmitting\n    }) => <>\r\n          <Item label="用户名" name="username" rules={[{\n        type: \'email\',\n        required: true\n      }]}>\r\n            <Input />\r\n          </Item>\r\n          <Item label="密码" name="password" rules={[{\n        type: \'string\',\n        required: true,\n        min: 3,\n        max: 8\n      }]}>\r\n            <Input type="password" />\r\n          </Item>\r\n          <Item label="重复密码" name="confirmPwd" rules={confirmRules}>\r\n            <Input type="password" />\r\n          </Item>\r\n          <div className="agreement-section" style={{\n        display: \'flex\',\n        justifyContent: \'center\'\n      }}>\r\n            <Item name="agreement" valuePropName="checked" getValueFromEvent={e => e.target.checked} rules={[{\n          type: \'enum\',\n          enum: [true],\n          message: \'请同意协议\'\n        }]}>\r\n              <input type="checkbox" />\r\n            </Item>\r\n            <span className="agree-text">\r\n              注册即代表你同意<a href="#">用户协议</a>\r\n            </span>\r\n          </div>\r\n          <div className="rose-form-submit-area">\r\n            <Button type="submit" btnType="primary">\r\n              登陆 {isSubmitting ? \'验证中\' : \'验证完毕\'}{\' \'}\r\n              {isValid ? \'通过😄\' : \'没通过😢\'}{\' \'}\r\n            </Button>\r\n            <Button type="button" onClick={resetAll}>\r\n              重置\r\n            </Button>\r\n          </div>\r\n        </>}\r\n    </Form>;\n}',...CFullForm.parameters?.docs?.source}}};const __namedExportsOrder=["ABasicForm","BRegForm","CFullForm"]},"./src/components/Button/button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Button=_ref=>{let{btnType="default",className,disabled=!1,size,children,href,...restProps}=_ref;const classes=classnames__WEBPACK_IMPORTED_MODULE_0___default()("btn",className,{["btn-".concat(btnType)]:btnType,["btn-".concat(size)]:size,disabled:"link"===btnType&&disabled});return"link"===btnType&&href?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("a",{className:classes,href,...restProps,children}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("button",{className:classes,disabled,...restProps,children})},__WEBPACK_DEFAULT_EXPORT__=Button;Button.__docgenInfo={description:"页面中最常用的的按钮元素，适合于完成特定的交互，同时支持 HTML button 和 a 链接 的所有属性\r\n### 引用方法\r\n\r\n```javascript\r\nimport { Button } from 'rosebush-react'\r\n```\r\n\r\n### 组件展示",methods:[],displayName:"Button",props:{btnType:{defaultValue:{value:"'default'",computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1}}}},"./src/components/Icon/icon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@fortawesome/react-fontawesome/index.es.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Icon=_ref=>{let{className,theme,...restProps}=_ref;const classes=classnames__WEBPACK_IMPORTED_MODULE_0___default()("rose-icon",className,{["icon-".concat(theme)]:theme});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__.g,{className:classes,...restProps})},__WEBPACK_DEFAULT_EXPORT__=Icon;Icon.__docgenInfo={description:"提供了一套常用的图标集合 基于 react-fontawesome。\r\n\r\n支持 react-fontawesome的所有属性 可以在这里查询 https://github.com/FortAwesome/react-fontawesome#basic\r\n\r\n支持 fontawesome 所有 free-solid-icons，可以在这里查看所有图标 https://fontawesome.com/icons?d=gallery&s=solid&m=free\r\n### 引用方法\r\n\r\n~~~js\r\nimport { Icon } from 'rosebush-react'\r\n~~~",methods:[],displayName:"Icon",props:{theme:{required:!1,tsType:{name:"union",raw:"| 'primary'\r\n| 'secondary'\r\n| 'success'\r\n| 'info'\r\n| 'warning'\r\n| 'danger'\r\n| 'light'\r\n| 'dark'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'success'"},{name:"literal",value:"'info'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'danger'"},{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"支持框架主题 根据主题显示不同的颜色"}},composes:["FontAwesomeIconProps"]}},"./src/components/Input/input.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _Icon_icon__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Icon/icon.tsx"),classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Input=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(((props,ref)=>{const{disabled,size,icon,prepend,append,style,...restProps}=props,classes=classnames__WEBPACK_IMPORTED_MODULE_0___default()("rose-input-wrapper",{["input-size-".concat(size)]:size,"is-disabled":disabled,"input-group":prepend||append,"input-group-append":!!append,"input-group-prepend":!!prepend});var value;return"value"in restProps&&(delete restProps.defaultValue,restProps.value=null==(value=restProps.value)?"":value),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{className:classes,style,children:[prepend&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"rose-input-group-prepend",children:prepend}),icon&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"icon-wrapper",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_Icon_icon__WEBPACK_IMPORTED_MODULE_3__.A,{icon,title:"title-".concat(icon)})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{ref,className:"rose-input-inner",disabled,...restProps}),append&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"rose-input-group-append",children:append})]})})),__WEBPACK_DEFAULT_EXPORT__=Input;Input.__docgenInfo={description:"Input 输入框 通过鼠标或键盘输入内容，是最基础的表单域的包装。\r\n\r\n### 引用方式\r\n~~~js\r\nimport { Input } from 'rosebush-react'\r\n~~~\r\n\r\n支持 HTMLInput 的所有基本属性\r\n\r\n### 组件展示",methods:[],displayName:"Input",props:{disabled:{required:!1,tsType:{name:"boolean"},description:"是否禁用 Input"},size:{required:!1,tsType:{name:"union",raw:"'lg' | 'sm'",elements:[{name:"literal",value:"'lg'"},{name:"literal",value:"'sm'"}]},description:"设置 input 大小，支持 lg 或者是 sm"},icon:{required:!1,tsType:{name:"IconProp"},description:"添加图标，在右侧悬浮添加一个图标，用于提示"},prepend:{required:!1,tsType:{name:"union",raw:"string | React.ReactElement",elements:[{name:"string"},{name:"ReactReactElement",raw:"React.ReactElement"}]},description:"添加前缀 用于配置一些固定组合"},append:{required:!1,tsType:{name:"union",raw:"string | React.ReactElement",elements:[{name:"string"},{name:"ReactReactElement",raw:"React.ReactElement"}]},description:"添加后缀 用于配置一些固定组合"},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},name:"e"}],return:{name:"void"}}},description:""}},composes:["Omit"]}},"./src/components/Select/select.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__,CW:()=>SelectContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_Input_input__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Input/input.tsx"),_Icon_icon__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/Icon/icon.tsx"),_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/hooks/useClickOutside.tsx"),_Transition_transition__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Transition/transition.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const SelectContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({selectedValues:[]}),Select=props=>{const{defaultValue,placeholder,children,multiple,name,disabled,onChange,onVisibleChange}=props,input=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),containerRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),containerWidth=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0),[selectedValues,setSelectedValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Array.isArray(defaultValue)?defaultValue:[]),[menuOpen,setOpen]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("string"==typeof defaultValue?defaultValue:""),handleOptionClick=(value,isSelected)=>{multiple?setValue(""):(setOpen(!1),setValue(value),onVisibleChange&&onVisibleChange(!1));let updatedValues=[value];multiple&&(updatedValues=isSelected?selectedValues.filter((v=>v!==value)):[...selectedValues,value],setSelectedValues(updatedValues)),onChange&&onChange(value,updatedValues)};(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{input.current&&(input.current.focus(),multiple&&selectedValues.length>0?input.current.placeholder="":placeholder&&(input.current.placeholder=placeholder))}),[selectedValues,multiple,placeholder]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{containerRef.current&&(containerWidth.current=containerRef.current.getBoundingClientRect().width)})),(0,_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_3__.A)(containerRef,(()=>{setOpen(!1),onVisibleChange&&menuOpen&&onVisibleChange(!1)}));const passedContext={onSelect:handleOptionClick,selectedValues,multiple},containerClass=classnames__WEBPACK_IMPORTED_MODULE_1___default()("rose-select",{"menu-is-open":menuOpen,"is-disabled":disabled,"is-multiple":multiple});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{className:containerClass,ref:containerRef,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"rose-select-input",onClick:e=>{e.preventDefault(),disabled||(setOpen(!menuOpen),onVisibleChange&&onVisibleChange(!menuOpen))},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_Input_input__WEBPACK_IMPORTED_MODULE_4__.A,{ref:input,placeholder,value,readOnly:!0,icon:"angle-down",disabled,name})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SelectContext.Provider,{value:passedContext,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_Transition_transition__WEBPACK_IMPORTED_MODULE_5__.A,{in:menuOpen,animation:"zoom-in-top",timeout:300,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("ul",{className:"rose-select-dropdown",children:react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children,((child,i)=>{const childElement=child;if("Option"===childElement.type.displayName)return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(childElement,{index:"select-".concat(i)});console.error("Warning: Select has a child which is not a Option component")}))})})}),multiple&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"rose-selected-tags",style:{maxWidth:containerWidth.current-32},children:selectedValues.map(((value,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("span",{className:"rose-tag",children:[value,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_Icon_icon__WEBPACK_IMPORTED_MODULE_6__.A,{icon:"times",onClick:()=>{handleOptionClick(value,!0)}})]},"tag-".concat(index))))})]})};Select.defaultProps={name:"rose-select",placeholder:"请选择"};const __WEBPACK_DEFAULT_EXPORT__=Select;Select.__docgenInfo={description:"下拉选择器。\r\n弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器时。\r\n### 引用方法\r\n\r\n~~~js\r\nimport { Select } from 'roseship-react'\r\n// 然后可以使用 <Select> 和 <Select.Option>\r\n~~~",methods:[],displayName:"Select",props:{defaultValue:{required:!1,tsType:{name:"union",raw:"string | string[]",elements:[{name:"string"},{name:"Array",elements:[{name:"string"}],raw:"string[]"}]},description:"指定默认选中的条目\t 可以是是字符串或者字符串数组"},placeholder:{required:!1,tsType:{name:"string"},description:"选择框默认文字",defaultValue:{value:"'请选择'",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"是否禁用"},multiple:{required:!1,tsType:{name:"boolean"},description:"是否支持多选"},name:{required:!1,tsType:{name:"string"},description:"select input 的 name 属性",defaultValue:{value:"'rose-select'",computed:!1}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(selectedValue: string, selectedValues: string[]) => void",signature:{arguments:[{type:{name:"string"},name:"selectedValue"},{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"selectedValues"}],return:{name:"void"}}},description:"选中值发生变化时触发"},onVisibleChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(visible: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"visible"}],return:{name:"void"}}},description:"下拉框出现/隐藏时触发"},children:{required:!1,tsType:{name:"ReactNode"},description:""}}}},"./src/components/Transition/transition.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react_transition_group__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-transition-group/esm/CSSTransition.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Transition=_ref=>{let{children,classNames,animation,wrapper,...restProps}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_transition_group__WEBPACK_IMPORTED_MODULE_1__.A,{classNames:classNames||animation,...restProps,children:wrapper?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children}):children})};Transition.defaultProps={unmountOnExit:!0,appear:!0};const __WEBPACK_DEFAULT_EXPORT__=Transition;Transition.__docgenInfo={description:"",methods:[],displayName:"Transition",props:{unmountOnExit:{defaultValue:{value:"true",computed:!1},required:!1},appear:{defaultValue:{value:"true",computed:!1},required:!1}}}},"./src/hooks/useClickOutside.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=function useClickOutside(ref,handler){(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const listener=event=>{ref.current&&!ref.current.contains(event.target)&&handler(event)};return document.addEventListener("click",listener),()=>{document.removeEventListener("click",listener)}}),[ref,handler])}}}]);